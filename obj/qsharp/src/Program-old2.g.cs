//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Program.Quantum.Walks.Coins\",\"Name\":\"HadamardCoin\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/thomas/Documents/Quantum_walks/Program-old2.qs\",\"Position\":{\"Item1\":263,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":23}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"coin\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":24},\"Item2\":{\"Line\":1,\"Column\":28}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Program.Quantum.Walks.Coins\",\"Name\":\"HadamardCoin\"},\"Attributes\":[],\"SourceFile\":\"/home/thomas/Documents/Quantum_walks/Program-old2.qs\",\"Position\":{\"Item1\":263,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":23}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Program.Quantum.Walks.Coins\",\"Name\":\"HadamardCoin\"},\"Attributes\":[],\"SourceFile\":\"/home/thomas/Documents/Quantum_walks/Program-old2.qs\",\"Position\":{\"Item1\":263,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":2,\"Column\":8},\"Item2\":{\"Line\":2,\"Column\":17}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Program.Quantum.Walks.Coins.HadamardCoin\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Program.Quantum.Walks.Coins\",\"Name\":\"HadamardCoin\"},\"Attributes\":[],\"SourceFile\":\"/home/thomas/Documents/Quantum_walks/Program-old2.qs\",\"Position\":{\"Item1\":263,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":2,\"Column\":8},\"Item2\":{\"Line\":2,\"Column\":17}},\"Documentation\":[\"automatically generated QsControlled specialization for Program.Quantum.Walks.Coins.HadamardCoin\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Program.Quantum.Walks.Coins\",\"Name\":\"HadamardCoin\"},\"Attributes\":[],\"SourceFile\":\"/home/thomas/Documents/Quantum_walks/Program-old2.qs\",\"Position\":{\"Item1\":263,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":2,\"Column\":8},\"Item2\":{\"Line\":2,\"Column\":17}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Program.Quantum.Walks.Coins.HadamardCoin\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Program.Quantum.Walks.Coins\",\"Name\":\"Fig9Coin\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/thomas/Documents/Quantum_walks/Program-old2.qs\",\"Position\":{\"Item1\":269,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"present\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":20},\"Item2\":{\"Line\":1,\"Column\":27}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"past\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":39},\"Item2\":{\"Line\":1,\"Column\":43}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Program.Quantum.Walks.Coins\",\"Name\":\"Fig9Coin\"},\"Attributes\":[],\"SourceFile\":\"/home/thomas/Documents/Quantum_walks/Program-old2.qs\",\"Position\":{\"Item1\":269,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Program.Quantum.Walks.Coins\",\"Name\":\"Fig9Coin\"},\"Attributes\":[],\"SourceFile\":\"/home/thomas/Documents/Quantum_walks/Program-old2.qs\",\"Position\":{\"Item1\":269,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":2,\"Column\":8},\"Item2\":{\"Line\":2,\"Column\":11}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Program.Quantum.Walks.Coins.Fig9Coin\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Walks\",\"Name\":\"TestFig9Coin\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":395,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/thomas/Documents/Quantum_walks/Program-old2.qs\",\"Position\":{\"Item1\":396,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":23}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Walks\",\"Name\":\"TestFig9Coin\"},\"Attributes\":[],\"SourceFile\":\"/home/thomas/Documents/Quantum_walks/Program-old2.qs\",\"Position\":{\"Item1\":396,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":23}},\"Documentation\":[]}")]
#line hidden
namespace Program.Quantum.Walks.Coins
{
    [SourceLocation("/home/thomas/Documents/Quantum_walks/Program-old2.qs", OperationFunctor.Body, 264, 270)]
    [SourceLocation("/home/thomas/Documents/Quantum_walks/Program-old2.qs", OperationFunctor.Adjoint, 264, 270)]
    [SourceLocation("/home/thomas/Documents/Quantum_walks/Program-old2.qs", OperationFunctor.Controlled, 264, 270)]
    [SourceLocation("/home/thomas/Documents/Quantum_walks/Program-old2.qs", OperationFunctor.ControlledAdjoint, 264, 270)]
    public partial class HadamardCoin : Unitary<IQArray<Qubit>>, ICallable
    {
        public HadamardCoin(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "HadamardCoin";
        String ICallable.FullName => "Program.Quantum.Walks.Coins.HadamardCoin";
        protected IUnitary Microsoft__Quantum__Canon__ApplyToEachCA
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        public override Func<IQArray<Qubit>, QVoid> __Body__ => (__in__) =>
        {
            var coin = __in__;
#line 266 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Apply((Microsoft__Quantum__Intrinsic__H, coin));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<IQArray<Qubit>, QVoid> __AdjointBody__ => (__in__) =>
        {
            var coin = __in__;
#line 264 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Adjoint.Apply((Microsoft__Quantum__Intrinsic__H, coin));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,IQArray<Qubit>), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,coin) = __in__;
#line 264 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Controlled.Apply((__controlQubits__, (Microsoft__Quantum__Intrinsic__H, coin)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,IQArray<Qubit>), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,coin) = __in__;
#line 264 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Adjoint.Controlled.Apply((__controlQubits__, (Microsoft__Quantum__Intrinsic__H, coin)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Canon__ApplyToEachCA = this.__Factory__.Get<IUnitary>(typeof(global::Microsoft.Quantum.Canon.ApplyToEachCA<>));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
        }

        public override IApplyData __DataIn__(IQArray<Qubit> data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> coin)
        {
            return __m__.Run<HadamardCoin, IQArray<Qubit>, QVoid>(coin);
        }
    }

    [SourceLocation("/home/thomas/Documents/Quantum_walks/Program-old2.qs", OperationFunctor.Body, 270, 397)]
    [SourceLocation("/home/thomas/Documents/Quantum_walks/Program-old2.qs", OperationFunctor.Adjoint, 270, 397)]
    public partial class Fig9Coin : Adjointable<(IQArray<Qubit>,IQArray<Qubit>)>, ICallable
    {
        public Fig9Coin(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Qubit>,IQArray<Qubit>)>, IApplyData
        {
            public In((IQArray<Qubit>,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "Fig9Coin";
        String ICallable.FullName => "Program.Quantum.Walks.Coins.Fig9Coin";
        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable<QRange, QRange> RangeReverse__
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,Qubit)> SWAP__
        {
            get;
            set;
        }

        protected IUnitary<IQArray<Qubit>> HadamardCoin__
        {
            get;
            set;
        }

        public override Func<(IQArray<Qubit>,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (present,past) = __in__;
#line 274 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            foreach (var __qsVar0__i__ in new QRange(0L, 1L))
#line hidden
            {
#line 275 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                Microsoft__Quantum__Intrinsic__X.Apply(present[__qsVar0__i__]);
#line 276 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                Microsoft__Quantum__Intrinsic__X.Apply(past[0L]);
#line 277 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                Microsoft__Quantum__Intrinsic__X.Controlled.Apply((new QArray<Qubit>(past[0L]), past[1L]));
            }

#line 281 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Intrinsic__H.Apply(past[0L]);
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            foreach (var __qsVar0____qsVar0__i____ in RangeReverse__.Apply(new QRange(0L, 1L)))
#line hidden
            {
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                Microsoft__Quantum__Intrinsic__X.Controlled.Adjoint.Apply((new QArray<Qubit>(past[0L]), past[1L]));
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                Microsoft__Quantum__Intrinsic__X.Adjoint.Apply(past[0L]);
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                Microsoft__Quantum__Intrinsic__X.Adjoint.Apply(present[__qsVar0____qsVar0__i____]);
            }

#line 286 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Intrinsic__X.Apply(present[1L]);
#line 287 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            SWAP__.Apply((past[0L], past[1L]));
#line 290 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Intrinsic__H.Apply(past[0L]);
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            SWAP__.Adjoint.Apply((past[0L], past[1L]));
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Intrinsic__X.Adjoint.Apply(present[1L]);
#line 295 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Intrinsic__X.Apply(present[0L]);
#line 298 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            HadamardCoin__.Apply(past);
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Intrinsic__X.Adjoint.Apply(present[0L]);
#line 306 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Intrinsic__H.Apply(past[0L]);
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,IQArray<Qubit>), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (present,past) = __in__;
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(past[0L]);
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Intrinsic__X.Apply(present[0L]);
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            HadamardCoin__.Adjoint.Apply(past);
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Intrinsic__X.Adjoint.Apply(present[0L]);
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Intrinsic__X.Apply(present[1L]);
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            SWAP__.Apply((past[0L], past[1L]));
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(past[0L]);
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            SWAP__.Adjoint.Apply((past[0L], past[1L]));
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Intrinsic__X.Adjoint.Apply(present[1L]);
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            foreach (var __qsVar0____qsVar0__i____ in new QRange(0L, 1L))
#line hidden
            {
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                Microsoft__Quantum__Intrinsic__X.Apply(present[__qsVar0____qsVar0__i____]);
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                Microsoft__Quantum__Intrinsic__X.Apply(past[0L]);
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                Microsoft__Quantum__Intrinsic__X.Controlled.Apply((new QArray<Qubit>(past[0L]), past[1L]));
            }

#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(past[0L]);
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
            foreach (var __qsVar0____qsVar0____qsVar0__i______ in RangeReverse__.Apply(new QRange(0L, 1L)))
#line hidden
            {
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                Microsoft__Quantum__Intrinsic__X.Controlled.Adjoint.Apply((new QArray<Qubit>(past[0L]), past[1L]));
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                Microsoft__Quantum__Intrinsic__X.Adjoint.Apply(past[0L]);
#line 270 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                Microsoft__Quantum__Intrinsic__X.Adjoint.Apply(present[__qsVar0____qsVar0____qsVar0__i______]);
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.RangeReverse__ = this.__Factory__.Get<ICallable<QRange, QRange>>(typeof(global::Microsoft.Quantum.Core.RangeReverse));
            this.SWAP__ = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.SWAP));
            this.HadamardCoin__ = this.__Factory__.Get<IUnitary<IQArray<Qubit>>>(typeof(HadamardCoin));
        }

        public override IApplyData __DataIn__((IQArray<Qubit>,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> present, IQArray<Qubit> past)
        {
            return __m__.Run<Fig9Coin, (IQArray<Qubit>,IQArray<Qubit>), QVoid>((present, past));
        }
    }
}

#line hidden
namespace Walks
{
    [SourceLocation("/home/thomas/Documents/Quantum_walks/Program-old2.qs", OperationFunctor.Body, 397, -1)]
    public partial class TestFig9Coin : Operation<QVoid, QVoid>, ICallable
    {
        public TestFig9Coin(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "TestFig9Coin";
        String ICallable.FullName => "Walks.TestFig9Coin";
        public static EntryPointInfo<QVoid, QVoid> Info => new EntryPointInfo<QVoid, QVoid>(typeof(TestFig9Coin));
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected IAdjointable<(IQArray<Qubit>,IQArray<Qubit>)> Program__Quantum__Walks__Coins__Fig9Coin
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Diagnostics__DumpMachine
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 399 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                var present = Allocate__.Apply(2L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 400 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                        var past = Allocate__.Apply(2L);
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line 403 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                            Microsoft__Quantum__Intrinsic__X.Apply(past[0L]);
#line 406 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                            Program__Quantum__Walks__Coins__Fig9Coin.Apply((present, past));
#line 409 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                            Microsoft__Quantum__Diagnostics__DumpMachine.Apply(QVoid.Instance);
#line 412 "/home/thomas/Documents/Quantum_walks/Program-old2.qs"
                            ResetAll__.Apply(QArray<Qubit>.Add(present, past));
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(past);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(present);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Program__Quantum__Walks__Coins__Fig9Coin = this.__Factory__.Get<IAdjointable<(IQArray<Qubit>,IQArray<Qubit>)>>(typeof(global::Program.Quantum.Walks.Coins.Fig9Coin));
            this.Microsoft__Quantum__Diagnostics__DumpMachine = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Diagnostics.DumpMachine<>));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<TestFig9Coin, QVoid, QVoid>(QVoid.Instance);
        }
    }
}